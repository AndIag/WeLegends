apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "es.coru.andiag.welegends"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "HttpLoggingInterceptorLevel", "\"${getRetrofitLoggingLevel()}\""
            buildConfigField "String", "AndIagApi", "\"${getAndIagApi()}\""
            buildConfigField "String", "ApiKey", "\"${getApiKey()}\""
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "HttpLoggingInterceptorLevel", "NONE"
            buildConfigField "String", "AndIagApi", "\"${getAndIagApi()}\""
            buildConfigField "String", "ApiKey", "\"${getApiKey()}\""
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    kapt 'com.jakewharton:butterknife-compiler:8.4.0'
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"

    compile "com.android.support:appcompat-v7:$tools_version"
    compile "com.android.support:cardview-v7:$tools_version"
    compile "com.android.support:recyclerview-v7:$tools_version"
    compile "com.android.support:support-v4:$tools_version"
    compile "com.android.support:design:$tools_version"
    compile "com.android.support:preference-v14:$tools_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'
    compile 'com.github.siyamed:android-shape-imageview:0.9.3@aar'
    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.6.9'
    compile 'cn.aigestudio.wheelpicker:WheelPicker:1.1.2'
    compile 'com.github.florent37:diagonallayout:1.0.3'

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.jakewharton:butterknife:8.4.0'

    // Async library for Kotlin
    compile 'org.jetbrains.anko:anko-sdk19:0.9'

    //Network access
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    compile 'com.github.pwittchen:reactivenetwork:0.7.0'

    //Database
    compile "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
    compile "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"
    compile "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:${dbflow_version}@aar"

    compile project(path: ':andiag-mvp')
}

kapt {
    generateStubs = true
}
buildscript {
}

def getRetrofitLoggingLevel() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    return properties.getProperty('HttpLoggingInterceptorLevel', "BODY")
}

def getAndIagApi() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    return properties.getProperty('AndIagApi', "http://andiag-prod.apigee.net/v1/test-welegends/")
}

def getApiKey() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    return properties.getProperty('ApiKey', "")
}